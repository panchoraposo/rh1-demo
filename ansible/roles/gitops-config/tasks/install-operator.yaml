---
- name: Create openshift-gitops-operator namespace
  k8s:
    api_version: v1
    kind: Namespace
    name: openshift-gitops-operator
    state: present

- name: Render OperatorGroup and Subscription manifest
  template:
    src: templates/gitops-subscription.yaml.j2
    dest: "{{ output_file }}"

- name: Apply OperatorGroup and Subscription
  kubernetes.core.k8s:
    state: present
    src: "{{ output_file }}"

- name: Wait for GitOps Operator CSV to be succeeded
  k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    namespace: openshift-gitops-operator
  register: gitops_csvs
  until: >
    gitops_csvs.resources | selectattr('metadata.name', 'search', 'gitops') |
    selectattr('status.phase', 'equalto', 'Succeeded') | list | length > 0
  retries: 30
  delay: 10

- name: Wait for GitOps Operator Deployment to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: openshift-gitops-operator-controller-manager
    namespace: openshift-gitops-operator
  register: deploy_status
  until: >
    deploy_status.resources | length > 0 and
    deploy_status.resources[0].status.availableReplicas is defined and
    deploy_status.resources[0].status.availableReplicas > 0
  retries: 30
  delay: 10

- name: Wait for ArgoCD webhook service endpoints
  shell: >
    oc get endpoints openshift-gitops-operator-controller-manager-service -n openshift-gitops-operator -o jsonpath="{.subsets}"
  register: webhook_endpoints
  until: webhook_endpoints.stdout != ""
  retries: 20
  delay: 10

- name: Create openshift-gitops namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: openshift-gitops

- name: Create ArgoCD instance in openshift-gitops
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: ArgoCD
      metadata:
        name: openshift-gitops
        namespace: openshift-gitops

- name: Wait for ArgoCD server deployment to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: openshift-gitops-server
    namespace: openshift-gitops
  register: deployment_status
  retries: 30
  delay: 10
  until: >
    deployment_status.resources | length > 0 and
    deployment_status.resources[0].status.readyReplicas is defined and
    deployment_status.resources[0].status.readyReplicas > 0

- name: "Create ClusterRole for ArgoCD"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: argocd-tekton-resource-manager
      rules:
        - apiGroups: ["tekton.dev"]
          resources: ["pipelines", "pipelineruns", "tasks", "taskruns"]
          verbs: ["*"]
        - apiGroups: ["triggers.tekton.dev"]
          resources: ["triggertemplates", "triggerbindings", "eventlisteners"]
          verbs: ["*"]
        - apiGroups: ["external-secrets.io"]
          resources: ["externalsecrets"]
          verbs: ["*"]
        - apiGroups: ["batch"]
          resources: ["jobs"]
          verbs: ["*"]

- name: "Create ClusterRoleBinding for the ArgoCD ServiceAccount"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: argocd-tekton-manager-binding
      subjects:
        - kind: ServiceAccount
          name: openshift-gitops-argocd-application-controller
          namespace: openshift-gitops
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: argocd-tekton-resource-manager