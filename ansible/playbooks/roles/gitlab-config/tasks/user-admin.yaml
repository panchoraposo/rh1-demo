- name: Create admin user
  ansible.builtin.uri:
    url: "https://{{ gitlab_host }}/api/v4/users"
    method: POST
    headers:
      PRIVATE-TOKEN: "{{ generated_pat_result.json.token }}"
    body_format: json
    body:
      email: "gitlab-admin@{{ gitlab_email_domain | default('rhdh.com') }}"
      name: "GitLab Admin"
      username: "gitlab-admin"
      password: "{{ gitlab_root_password }}"
      skip_confirmation: true
      reset_password: false
    status_code: [201, 409, 502, 503]
    validate_certs: "{{ validate_ssl_certs }}"
  register: admin_user_result
  until: admin_user_result.status in [201, 409]
  retries: 10
  delay: 10
  changed_when: admin_user_result.status == 201

- name: Get admin's ID
  ansible.builtin.uri:
    url: "https://{{ gitlab_host }}/api/v4/users?username=gitlab-admin"
    method: GET
    headers:
      PRIVATE-TOKEN: "{{ generated_pat_result.json.token }}"
    return_content: true
    validate_certs: "{{ validate_ssl_certs }}"
    status_code: [200, 502, 503]
  register: admin_lookup
  until: admin_lookup.status == 200
  retries: 10
  delay: 10

- name: Save admin's ID
  ansible.builtin.set_fact:
    admin_id: "{{ admin_lookup.json[0].id }}"

- name: Give privileges to admin
  ansible.builtin.uri:
    url: "https://{{ gitlab_host }}/api/v4/users/{{ admin_id }}"
    method: PUT
    headers:
      PRIVATE-TOKEN: "{{ generated_pat_result.json.token }}"
    body_format: json
    body:
      admin: true
    status_code: [200, 502, 503]
    validate_certs: "{{ validate_ssl_certs }}"
  when: grant_admin_privileges | default(true)
  register: admin_privileges_result
  until: admin_privileges_result.status == 200
  retries: 10
  delay: 10