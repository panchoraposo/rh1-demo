---
- name: "Asegurar que el SA de External Secrets tenga un Secret de token"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: external-secrets-sa-token
        namespace: vault
        annotations:
          kubernetes.io/service-account.name: external-secrets-operator-controller-manager
      type: kubernetes.io/service-account-token

- name: "Aplicar NetworkPolicy de depuración (PERMITIR TODO)"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: allow-all-for-vault-debug
        namespace: vault
      spec:
        podSelector:
          matchLabels:
            app.kubernetes.io/instance: vault
        policyTypes:
        - Ingress
        ingress:
        - {}

- name: "Crear ClusterRoleBinding para system:auth-delegator"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: vault-auth-delegator
      subjects:
        - kind: ServiceAccount
          name: "{{ vault_sa_name }}"
          namespace: "{{ vault_namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:auth-delegator

- name: "Crear el ClusterSecretStore para conectar con Vault"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: external-secrets.io/v1
      kind: ClusterSecretStore
      metadata:
        name: vault-secret-store
      spec:
        provider:
          vault:
            server: "http://vault.{{ vault_namespace }}.svc:8200"
            path: "secret"
            version: "v2"
            auth:
              kubernetes:
                mountPath: "kubernetes"
                role: "{{ vault_k8s_role_name }}"
                serviceAccountRef:
                  name: "{{ eso_sa_name }}"
                  namespace: "{{ eso_namespace }}"

- name: "Esperar a que el ClusterSecretStore esté listo"
  kubernetes.core.k8s_info:
    api_version: external-secrets.io/v1
    kind: ClusterSecretStore
    name: vault-secret-store
  register: css_info
  until: >
    css_info.resources | length > 0 and
    css_info.resources[0].status is defined and
    css_info.resources[0].status.conditions is defined and
    (css_info.resources[0].status.conditions | selectattr('type', 'equalto', 'Ready') | list | length > 0) and
    (css_info.resources[0].status.conditions | selectattr('type', 'equalto', 'Ready') | list)[0].status == "True"
  retries: 20
  delay: 5