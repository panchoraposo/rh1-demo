---
- name: "Asegurar que la instalación anterior de Helm sea eliminada"
  ansible.builtin.command: >
    helm uninstall external-secrets -n external-secrets
  register: helm_uninstall
  failed_when: false
  changed_when: "'release \"external-secrets\" uninstalled' in helm_uninstall.stdout"

- name: "Asegurar que los CRDs antiguos sean eliminados"
  ansible.builtin.command: >
    oc delete crd -l "app.kubernetes.io/instance=external-secrets"
  register: crd_delete
  failed_when: false
  changed_when: "'deleted' in crd_delete.stdout"

- name: Ensure Helm repo is added
  ansible.builtin.command: >
    helm repo add {{ helm_repo_name }} {{ helm_repo_url }}
  register: helm_repo_add
  failed_when: false
  changed_when: "'\"has been added\"' in helm_repo_add.stdout"

- name: Update Helm repositories
  ansible.builtin.command: helm repo update

- name: Create namespace if it doesn't exist
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ eso_namespace }}"
    state: present

- name: Deploy External Secrets Operator via Helm
  command:
    cmd: >
      helm upgrade --install external-secrets external-secrets/external-secrets
      --namespace vault --create-namespace
      
      --set installCRDs=true
      --set serviceAccount.name=external-secrets-operator-controller-manager
      --set controller.clusterSecretStore.enabled=true
      --set controller.logLevel=debug

- name: "Esperar a que el CRD de ExternalSecret esté disponible en el clúster"
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: externalsecrets.external-secrets.io
  register: es_crd_info
  until: "es_crd_info.resources is defined and es_crd_info.resources | length > 0"
  retries: 30
  delay: 5
  changed_when: false